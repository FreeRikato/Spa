# ============================================
# Development Profile Configuration
# ============================================
# This file is loaded when the 'dev' Spring profile is active
# Use this configuration for local development with automatic data seeding

# --- Server Configuration ---
server.port=8080
server.servlet.context-path=/api

# --- Database Configuration (H2 File-Based) ---
# File-based H2 database that persists between restarts
# Database file location: ./data/spabooking.h2.db
spring.datasource.url=jdbc:h2:./data/spabooking
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# --- JPA/Hibernate Configuration ---
# Show SQL queries in console for debugging
spring.jpa.show-sql=true
# Format SQL for readability
spring.jpa.properties.hibernate.format_sql=true
# Log SQL parameters
spring.jpa.properties.hibernate.use_sql_comments=true
# IMPORTANT: Set to 'validate' to let Flyway handle schema management
# DO NOT use 'create', 'create-drop', or 'update' with Flyway
spring.jpa.hibernate.ddl-auto=validate
# Dialect for H2 database
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# --- Flyway Configuration ---
# Automatic database migrations on startup
spring.flyway.enabled=true
# Location of migration scripts (relative to classpath)
spring.flyway.locations=classpath:db/migration
# Baseline for existing databases (set to false for new projects)
spring.flyway.baselineOnMigrate=false

# --- H2 Console (for database inspection) ---
# Enable H2 Web Console - Access at: http://localhost:8080/h2-console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
# Set console context to root (outside /api)
spring.h2.console.settings.web-allow-others=true

# --- Logging Configuration ---
# Enable DEBUG logging to see what's happening during seeding
logging.level.root=INFO
logging.level.com.example.spas=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# --- CORS Configuration for Frontend ---
# Allows requests from localhost:4200 (Angular development server)
cors.allowed-origins=http://localhost:4200
cors.allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
cors.allow-credentials=true
cors.max-age=3600

# --- Session Configuration ---
# Spring Session removed - using default in-memory sessions
# No session configuration needed for development

# --- Data Seeding Configuration ---
# Enable/disable automatic data seeding on startup
app.seeding.enabled=true
# Force data seeding even if data exists (use with caution)
app.seeding.force=false

# --- Application Name and Description ---
app.name=Spa Booking API
app.version=1.0.0-dev
